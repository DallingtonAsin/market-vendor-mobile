{"version":3,"sources":["provider.tsx"],"names":["keyboardEvents","Platform","select","default","show","hide","ios","AlertsProvider","children","state","dispatch","reducer","initialState","value","setValue","password","setPassword","dismiss","type","payload","alerts","alert","title","message","button","options","visible","prompt","callbackOrButtons","defaultValue","keyboardType","text","onPress","style","secureTextEntry","login","theme","translateY","Animated","Value","onKeyboardShown","height","timing","current","toValue","duration","easing","Easing","ease","useNativeDriver","start","onKeyboardHidden","Keyboard","addListener","e","endCoordinates","removeAllListeners","styles","animate","transform","cancelable","onDismiss","web","width","alignSelf","maxWidth","autoFocus","inputAppearance","inputLabel","undefined","keyboardAppearance","loginInputLabel","passwordInputLabel","stacked","map","btn","colors","error","primary","uppercase","StyleSheet","create","flexDirection","alignItems","flex","marginVertical","marginBottom","OS"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAWA,MAAMA,cAA0D,GAAGC,sBAASC,MAAT,CAAgB;AACjFC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,iBADC;AAEPC,IAAAA,IAAI,EAAE;AAFC,GADwE;AAKjFC,EAAAA,GAAG,EAAE;AACHF,IAAAA,IAAI,EAAE,kBADH;AAEHC,IAAAA,IAAI,EAAE;AAFH;AAL4E,CAAhB,CAAnE;;AAWA,MAAME,cAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,uBAAWC,gBAAX,EAAoBC,qBAApB,CAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,qBAAS,EAAT,CAA1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B,qBAAS,EAAT,CAAhC;AAEA,QAAMC,OAAO,GAAG,wBAAY,MAAMP,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,OAAO,EAAE;AAA5B,GAAD,CAA1B,EAA8D,EAA9D,CAAhB;AAEA,QAAMC,MAAqB,GAAG,oBAC5B,OAAO;AACLC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,OAAzB,KACLf,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,OADC;AAEPC,MAAAA,OAAO,EAAE;AACPG,QAAAA,KADO;AAEPC,QAAAA,OAFO;AAGPC,QAAAA,MAHO;AAIP,YAAIC,OAAO,IAAI;AAAEA,UAAAA;AAAF,SAAf,CAJO;AAKPC,QAAAA,OAAO,EAAE;AALF;AAFF,KAAD,CAFL;AAYLC,IAAAA,MAAM,EAAE,CAACL,KAAD,EAAQC,OAAR,EAAiBK,iBAAjB,EAAoCV,IAApC,EAA0CW,YAA1C,EAAwDC,YAAxD,EAAsEL,OAAtE,KAAkF;AACxFX,MAAAA,QAAQ,CAACe,YAAD,aAACA,YAAD,cAACA,YAAD,GAAiB,EAAjB,CAAR;AACAb,MAAAA,WAAW,CAAC,EAAD,CAAX;;AACA,UAAI,OAAOY,iBAAP,KAA6B,UAAjC,EAA6C;AAC3C,gBAAQV,IAAR;AACE,eAAK,YAAL;AACE,mBAAOR,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPH,gBAAAA,MAAM,EAAE,CACN;AAAEI,kBAAAA,IAAI,EAAE,IAAR;AAAcC,kBAAAA,OAAO,EAAEJ;AAAvB,iBADM,EAEN;AAAEG,kBAAAA,IAAI,EAAE,QAAR;AAAkBE,kBAAAA,KAAK,EAAE;AAAzB,iBAFM,CAJD;AAQP,oBAAIR,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CARO;AASPC,gBAAAA,OAAO,EAAE;AATF;AAFK,aAAD,CAAf;;AAeF,eAAK,aAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPI,gBAAAA,eAAe,EAAE,IAJV;AAKPP,gBAAAA,MAAM,EAAE,CACN;AAAEI,kBAAAA,IAAI,EAAE,IAAR;AAAcC,kBAAAA,OAAO,EAAEJ;AAAvB,iBADM,EAEN;AAAEG,kBAAAA,IAAI,EAAE,QAAR;AAAkBE,kBAAAA,KAAK,EAAE;AAAzB,iBAFM,CALD;AASP,oBAAIR,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CATO;AAUPC,gBAAAA,OAAO,EAAE;AAVF;AAFK,aAAD,CAAf;;AAgBF,eAAK,gBAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPK,gBAAAA,KAAK,EAAE,CACL;AAAEJ,kBAAAA,IAAI,EAAE,IAAR;AAAcC,kBAAAA,OAAO,EAAEJ;AAAvB,iBADK,EAEL;AAAEG,kBAAAA,IAAI,EAAE,QAAR;AAAkBE,kBAAAA,KAAK,EAAE;AAAzB,iBAFK,CAJA;AAQP,oBAAIR,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CARO;AASPC,gBAAAA,OAAO,EAAE;AATF;AAFK,aAAD,CAAf;;AAeF,eAAK,SAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,OADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPC,gBAAAA,MAAM,EAAE,CAAC;AAAEO,kBAAAA,IAAI,EAAE,IAAR;AAAcC,kBAAAA,OAAO,EAAEJ;AAAvB,iBAAD,CAHD;AAIP,oBAAIH,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CAJO;AAKPC,gBAAAA,OAAO,EAAE;AALF;AAFK,aAAD,CAAf;;AAWF;AACEhB,YAAAA,QAAQ,CAAC;AACPQ,cAAAA,IAAI,EAAE,QADC;AAEPC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPH,gBAAAA,MAAM,EAAE,CACN;AAAEI,kBAAAA,IAAI,EAAE,IAAR;AAAcC,kBAAAA,OAAO,EAAEJ;AAAvB,iBADM,EAEN;AAAEG,kBAAAA,IAAI,EAAE,QAAR;AAAkBE,kBAAAA,KAAK,EAAE;AAAzB,iBAFM,CAJD;AAQP,oBAAIR,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CARO;AASPC,gBAAAA,OAAO,EAAE;AATF;AAFF,aAAD,CAAR;AA/DJ;AA8ED,OA/ED,MA+EO,IAAI,OAAOE,iBAAP,KAA6B,WAAjC,EAA8C;AACnD,gBAAQV,IAAR;AACE,eAAK,YAAL;AACE,mBAAOR,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPH,gBAAAA,MAAM,EAAE,CAAC;AAAEI,kBAAAA,IAAI,EAAE;AAAR,iBAAD,EAAiB;AAAEA,kBAAAA,IAAI,EAAE,QAAR;AAAkBE,kBAAAA,KAAK,EAAE;AAAzB,iBAAjB,CAJD;AAKP,oBAAIR,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CALO;AAMPC,gBAAAA,OAAO,EAAE;AANF;AAFK,aAAD,CAAf;;AAYF,eAAK,aAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPI,gBAAAA,eAAe,EAAE,IAJV;AAKPP,gBAAAA,MAAM,EAAE,CAAC;AAAEI,kBAAAA,IAAI,EAAE;AAAR,iBAAD,EAAiB;AAAEA,kBAAAA,IAAI,EAAE,QAAR;AAAkBE,kBAAAA,KAAK,EAAE;AAAzB,iBAAjB,CALD;AAMP,oBAAIR,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CANO;AAOPC,gBAAAA,OAAO,EAAE;AAPF;AAFK,aAAD,CAAf;;AAaF,eAAK,gBAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPK,gBAAAA,KAAK,EAAE,CAAC;AAAEJ,kBAAAA,IAAI,EAAE;AAAR,iBAAD,EAAiB;AAAEA,kBAAAA,IAAI,EAAE,QAAR;AAAkBE,kBAAAA,KAAK,EAAE;AAAzB,iBAAjB,CAJA;AAKP,oBAAIR,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CALO;AAMPC,gBAAAA,OAAO,EAAE;AANF;AAFK,aAAD,CAAf;;AAYF,eAAK,SAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,OADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPC,gBAAAA,MAAM,EAAE,CAAC;AAAEO,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAHD;AAIP,oBAAIN,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CAJO;AAKPC,gBAAAA,OAAO,EAAE;AALF;AAFK,aAAD,CAAf;;AAWF;AACEhB,YAAAA,QAAQ,CAAC;AACPQ,cAAAA,IAAI,EAAE,QADC;AAEPC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPH,gBAAAA,MAAM,EAAE,CAAC;AAAEI,kBAAAA,IAAI,EAAE;AAAR,iBAAD,EAAiB;AAAEA,kBAAAA,IAAI,EAAE,QAAR;AAAkBE,kBAAAA,KAAK,EAAE;AAAzB,iBAAjB,CAJD;AAKP,oBAAIR,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CALO;AAMPC,gBAAAA,OAAO,EAAE;AANF;AAFF,aAAD,CAAR;AAtDJ;AAkED,OAnEM,MAmEA;AACL,gBAAQR,IAAR;AACE,eAAK,YAAL;AACE,mBAAOR,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPH,gBAAAA,MAAM,EAAEC,iBAJD;AAKP,oBAAIH,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CALO;AAMPC,gBAAAA,OAAO,EAAE;AANF;AAFK,aAAD,CAAf;;AAYF,eAAK,aAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPI,gBAAAA,eAAe,EAAE,IAJV;AAKPP,gBAAAA,MAAM,EAAEC,iBALD;AAMP,oBAAIH,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CANO;AAOPC,gBAAAA,OAAO,EAAE;AAPF;AAFK,aAAD,CAAf;;AAaF,eAAK,gBAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,QADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPK,gBAAAA,KAAK,EAAEP,iBAJA;AAKP,oBAAIH,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CALO;AAMPC,gBAAAA,OAAO,EAAE;AANF;AAFK,aAAD,CAAf;;AAYF,eAAK,SAAL;AACE,mBAAOhB,QAAQ,CAAC;AACdQ,cAAAA,IAAI,EAAE,OADQ;AAEdC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPC,gBAAAA,MAAM,EAAEI,iBAHD;AAIP,oBAAIH,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CAJO;AAKPC,gBAAAA,OAAO,EAAE;AALF;AAFK,aAAD,CAAf;;AAWF;AACEhB,YAAAA,QAAQ,CAAC;AACPQ,cAAAA,IAAI,EAAE,QADC;AAEPC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,KADO;AAEPC,gBAAAA,OAFO;AAGPO,gBAAAA,YAHO;AAIPH,gBAAAA,MAAM,EAAEC,iBAJD;AAKP,oBAAIH,OAAO,IAAI;AAAEA,kBAAAA;AAAF,iBAAf,CALO;AAMPC,gBAAAA,OAAO,EAAE;AANF;AAFF,aAAD,CAAR;AAtDJ;AAkED;AACF;AArOI,GAAP,CAD4B,EAwO5B,EAxO4B,CAA9B;AA2OA,QAAMU,KAAK,GAAG,iCAAd;AAEA,QAAMC,UAAU,GAAG,mBAAO,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAAP,CAAnB;AAEA,QAAMC,eAAe,GAAG,wBACrBC,MAAD,IACEH,sBAASI,MAAT,CAAgBL,UAAU,CAACM,OAA3B,EAAoC;AAClCC,IAAAA,OAAO,EAAE,CAACH,MADwB;AAElCI,IAAAA,QAAQ,EAAE,GAFwB;AAGlCC,IAAAA,MAAM,EAAEC,oBAAOC,IAHmB;AAIlCC,IAAAA,eAAe,EAAE;AAJiB,GAApC,EAKGC,KALH,EAFoB,EAQtB,EARsB,CAAxB;AAWA,QAAMC,gBAAgB,GAAG,wBACvB,MACEb,sBAASI,MAAT,CAAgBL,UAAU,CAACM,OAA3B,EAAoC;AAClCC,IAAAA,OAAO,EAAE,CADyB;AAElCC,IAAAA,QAAQ,EAAE,GAFwB;AAGlCC,IAAAA,MAAM,EAAEC,oBAAOC,IAHmB;AAIlCC,IAAAA,eAAe,EAAE;AAJiB,GAApC,EAKGC,KALH,EAFqB,EAQvB,EARuB,CAAzB;AAWA,wBAAU,MAAM;AACd,QAAIzC,KAAK,CAACiB,OAAV,EAAmB;AACjB0B,4BAASC,WAAT,CAAqBrD,cAAc,CAACI,IAApC,EAA2CkD,CAAD,IACxCd,eAAe,CAACc,CAAC,CAACC,cAAF,CAAiBd,MAAjB,GAA0B,CAA3B,CADjB;;AAGAW,4BAASC,WAAT,CAAqBrD,cAAc,CAACK,IAApC,EAA0C,MAAM8C,gBAAgB,EAAhE;AACD;;AACD,WAAO,MAAM;AACXA,MAAAA,gBAAgB;;AAChBC,4BAASI,kBAAT,CAA4BxD,cAAc,CAACI,IAA3C;;AACAgD,4BAASI,kBAAT,CAA4BxD,cAAc,CAACK,IAA3C;AACD,KAJD;AAKD,GAZD,EAYG,CAAC8C,gBAAD,EAAmBX,eAAnB,EAAoC/B,KAAK,CAACiB,OAA1C,CAZH;AAcA,sBACE,6BAAC,gBAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEN;AAA/B,KACGZ,QADH,eAEE,6BAAC,wBAAD,qBACE,6BAAC,qBAAD,CAAU,IAAV;AACE,IAAA,aAAa,EAAC,UADhB;AAEE,IAAA,KAAK,EAAE,CAACiD,MAAM,CAACC,OAAR,EAAiB;AAAEC,MAAAA,SAAS,EAAE,CAAC;AAAEtB,QAAAA,UAAU,EAAEA,UAAU,CAACM;AAAzB,OAAD;AAAb,KAAjB;AAFT,kBAIE,6BAAC,wBAAD;AACE,IAAA,OAAO,EAAElC,KAAK,CAACiB,OADjB;AAEE,IAAA,WAAW,EAAEjB,KAAK,CAACgB,OAAN,CAAcmC,UAF7B;AAGE,IAAA,SAAS,EAAE,MAAM;AACf,UAAInD,KAAK,CAACgB,OAAN,CAAcmC,UAAlB,EAA8B;AAAA;;AAC5B,mDAAAnD,KAAK,CAACgB,OAAN,EAAcoC,SAAd;AACD;;AACD5C,MAAAA,OAAO;AACR,KARH;AASE,IAAA,KAAK,EAAE,CACLwC,MAAM,CAACK,GADF,EAEL,EACE,IAAIrD,KAAK,CAACgB,OAAN,CAAcsC,KAAd,IAAuB;AACzBA,QAAAA,KAAK,EAAEtD,KAAK,CAACgB,OAAN,CAAcsC,KADI;AAEzBC,QAAAA,SAAS,EAAE,QAFc;AAGzBC,QAAAA,QAAQ,EAAExD,KAAK,CAACgB,OAAN,CAAcsC;AAHC,OAA3B;AADF,KAFK,EASL,EACE,IAAItD,KAAK,CAACgB,OAAN,CAAcwC,QAAd,IAA0B;AAC5BA,QAAAA,QAAQ,0BAAExD,KAAK,CAACgB,OAAN,CAAcsC,KAAhB,uEAAyBtD,KAAK,CAACgB,OAAN,CAAcwC;AADnB,OAA9B;AADF,KATK;AATT,KAyBGxD,KAAK,CAACa,KAAN,gBAAc,6BAAC,wBAAD,CAAQ,KAAR,QAAeb,KAAK,CAACa,KAArB,CAAd,GAA2D,IAzB9D,EA0BGb,KAAK,CAACc,OAAN,gBACC,6BAAC,wBAAD,CAAQ,OAAR,qBACE,6BAAC,2BAAD,QAAYd,KAAK,CAACc,OAAlB,CADF,CADD,GAIG,IA9BN,EA+BGd,KAAK,CAACkB,MAAN,gBACC,6BAAC,wBAAD,CAAQ,OAAR,qBACE,6BAAC,2BAAD;AACE,IAAA,SAAS,EAAElB,KAAK,CAACgB,OAAN,CAAcyC,SAD3B;AAEE,IAAA,IAAI,EAAEzD,KAAK,CAACgB,OAAN,CAAc0C,eAFtB;AAGE,IAAA,KAAK,2BACH1D,KAAK,CAACgB,OAAN,CAAc2C,UADX,yEAC0B3D,KAAK,CAACyB,eAAN,GAAwB,UAAxB,GAAqCmC,SAJtE;AAME,IAAA,KAAK,EAAExD,KANT;AAOE,IAAA,YAAY,EAAEC,QAPhB;AAQE,IAAA,eAAe,EAAEL,KAAK,CAACyB,eARzB;AASE,IAAA,kBAAkB,EAAEzB,KAAK,CAACgB,OAAN,CAAc6C,kBATpC;AAUE,IAAA,YAAY,EAAE7D,KAAK,CAACqB;AAVtB,IADF,CADD,GAeGrB,KAAK,CAAC0B,KAAN,gBACF,6BAAC,wBAAD,CAAQ,OAAR,qBACE,6BAAC,2BAAD;AACE,IAAA,SAAS,EAAE1B,KAAK,CAACgB,OAAN,CAAcyC,SAD3B;AAEE,IAAA,IAAI,EAAEzD,KAAK,CAACgB,OAAN,CAAc0C,eAFtB;AAGE,IAAA,KAAK,2BAAE1D,KAAK,CAACgB,OAAN,CAAc8C,eAAhB,yEAAmC,OAH1C;AAIE,IAAA,KAAK,EAAE1D,KAJT;AAKE,IAAA,YAAY,EAAEC,QALhB;AAME,IAAA,kBAAkB,EAAEL,KAAK,CAACgB,OAAN,CAAc6C,kBANpC;AAOE,IAAA,YAAY,EAAE7D,KAAK,CAACqB,YAPtB;AAQE,IAAA,KAAK,EAAE2B,MAAM,CAACtB;AARhB,IADF,eAWE,6BAAC,2BAAD;AACE,IAAA,IAAI,EAAE1B,KAAK,CAACgB,OAAN,CAAc0C,eADtB;AAEE,IAAA,KAAK,2BAAE1D,KAAK,CAACgB,OAAN,CAAc+C,kBAAhB,yEAAsC,UAF7C;AAGE,IAAA,KAAK,EAAEzD,QAHT;AAIE,IAAA,YAAY,EAAEC,WAJhB;AAKE,IAAA,kBAAkB,EAAEP,KAAK,CAACgB,OAAN,CAAc6C,kBALpC;AAME,IAAA,YAAY,EAAE7D,KAAK,CAACqB,YANtB;AAOE,IAAA,eAAe,EAAE;AAPnB,IAXF,CADE,GAsBA,IApEN,EAqEGrB,KAAK,CAACe,MAAN,gBACC,6BAAC,wBAAD,CAAQ,OAAR;AAAgB,IAAA,KAAK,EAAEf,KAAK,CAACgB,OAAN,CAAcgD,OAAd,IAAyBhB,MAAM,CAACgB;AAAvD,KACGhE,KAAK,CAACe,MAAN,CAAakD,GAAb,CAAkBC,GAAD,iBAChB,6BAAC,wBAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAAC5C,IADX;AAEE,IAAA,OAAO,EAAE,MAAM;AAAA;;AACb,sBAAA4C,GAAG,CAAC3C,OAAJ,mEAAA2C,GAAG;AACH1D,MAAAA,OAAO;AACR,KALH;AAME,IAAA,KAAK,EACH0D,GAAG,CAAC1C,KAAJ,KAAc,aAAd,GACIG,KAAK,CAACwC,MAAN,CAAaC,KADjB,GAEIF,GAAG,CAAC1C,KAAJ,KAAc,QAAd,GACAG,KAAK,CAACwC,MAAN,CAAa7C,IADb,GAEAK,KAAK,CAACwC,MAAN,CAAaE,OAXrB;AAaE,IAAA,SAAS,EAAErE,KAAK,CAACgB,OAAN,CAAcsD;AAb3B,KAeGJ,GAAG,CAAC5C,IAfP,CADD,CADH,CADD,GAsBGtB,KAAK,CAACkB,MAAN,gBACF,6BAAC,wBAAD,CAAQ,OAAR;AAAgB,IAAA,KAAK,EAAElB,KAAK,CAACgB,OAAN,CAAcgD,OAAd,IAAyBhB,MAAM,CAACgB;AAAvD,KACGhE,KAAK,CAACkB,MAAN,CAAa+C,GAAb,CAAkBC,GAAD,iBAChB,6BAAC,wBAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAAC5C,IADX;AAEE,IAAA,OAAO,EAAE,MAAM;AAAA;;AACb,uBAAA4C,GAAG,CAAC3C,OAAJ,qEAAA2C,GAAG,EAAW9D,KAAX,CAAH;AACAI,MAAAA,OAAO;AACR,KALH;AAME,IAAA,KAAK,EACH0D,GAAG,CAAC1C,KAAJ,KAAc,aAAd,GACIG,KAAK,CAACwC,MAAN,CAAaC,KADjB,GAEIF,GAAG,CAAC1C,KAAJ,KAAc,QAAd,GACAG,KAAK,CAACwC,MAAN,CAAa7C,IADb,GAEAK,KAAK,CAACwC,MAAN,CAAaE,OAXrB;AAaE,IAAA,SAAS,EAAErE,KAAK,CAACgB,OAAN,CAAcsD;AAb3B,KAeGJ,GAAG,CAAC5C,IAfP,CADD,CADH,CADE,GAsBAtB,KAAK,CAAC0B,KAAN,gBACF,6BAAC,wBAAD,CAAQ,OAAR;AAAgB,IAAA,KAAK,EAAE1B,KAAK,CAACgB,OAAN,CAAcgD,OAAd,IAAyBhB,MAAM,CAACgB;AAAvD,KACGhE,KAAK,CAAC0B,KAAN,CAAYuC,GAAZ,CAAiBC,GAAD,iBACf,6BAAC,wBAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAAC5C,IADX;AAEE,IAAA,OAAO,EAAE,MAAM;AAAA;;AACb,uBAAA4C,GAAG,CAAC3C,OAAJ,qEAAA2C,GAAG,EAAW;AAAExC,QAAAA,KAAK,EAAEtB,KAAT;AAAgBE,QAAAA;AAAhB,OAAX,CAAH;AACAE,MAAAA,OAAO;AACR,KALH;AAME,IAAA,KAAK,EACH0D,GAAG,CAAC1C,KAAJ,KAAc,aAAd,GACIG,KAAK,CAACwC,MAAN,CAAaC,KADjB,GAEIF,GAAG,CAAC1C,KAAJ,KAAc,QAAd,GACAG,KAAK,CAACwC,MAAN,CAAa7C,IADb,GAEAK,KAAK,CAACwC,MAAN,CAAaE,OAXrB;AAaE,IAAA,SAAS,EAAErE,KAAK,CAACgB,OAAN,CAAcsD;AAb3B,KAeGJ,GAAG,CAAC5C,IAfP,CADD,CADH,CADE,gBAuBF,6BAAC,wBAAD,CAAQ,OAAR,qBACE,6BAAC,wBAAD;AAAQ,IAAA,OAAO,EAAEd,OAAjB;AAA0B,IAAA,SAAS,EAAER,KAAK,CAACgB,OAAN,CAAcsD;AAAnD,UADF,CAxIJ,CAJF,CADF,CAFF,CADF;AA2JD,CArbD;;AAubA,MAAMtB,MAAM,GAAGuB,wBAAWC,MAAX,CAAkB;AAC/BR,EAAAA,OAAO,EAAE;AACPS,IAAAA,aAAa,EAAE,QADR;AAEPC,IAAAA,UAAU,EAAE;AAFL,GADsB;AAK/BzB,EAAAA,OAAO,EAAE;AACP0B,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,CAAC;AAFV,GALsB;AAS/BlD,EAAAA,KAAK,EAAE;AACLmD,IAAAA,YAAY,EAAE;AADT,GATwB;;AAY/B;AACAxB,EAAAA,GAAG,EACD7D,sBAASsF,EAAT,KAAgB,KAAhB,GACI;AACEtB,IAAAA,QAAQ,EAAE,GADZ;AAEED,IAAAA,SAAS,EAAE;AAFb,GADJ,GAKI;AAnByB,CAAlB,CAAf;;eAsBezD,c","sourcesContent":["import React, { useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport { KeyboardEventName, Platform } from 'react-native';\nimport { Animated, Easing, Keyboard, StyleSheet } from 'react-native';\nimport { Button, Dialog, Paragraph, Portal, TextInput, useTheme } from 'react-native-paper';\nimport AlertsContext from './context';\nimport reducer, { initialState } from './reducer';\nimport {\n  AlertButton,\n  AlertsMethods,\n  DefaultPromptCallback,\n  LoginPromptButton,\n  LoginPromptCallback,\n  RegularPromptButton,\n  RegularPromptCallback,\n} from './type';\n\nconst keyboardEvents: Record<'show' | 'hide', KeyboardEventName> = Platform.select({\n  default: {\n    show: 'keyboardDidShow',\n    hide: 'keyboardDidHide',\n  },\n  ios: {\n    show: 'keyboardWillShow',\n    hide: 'keyboardWillHide',\n  },\n});\n\nconst AlertsProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [value, setValue] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dismiss = useCallback(() => dispatch({ type: 'DISMISS', payload: {} }), []);\n\n  const alerts: AlertsMethods = useMemo(\n    () => ({\n      alert: (title, message, button, options) =>\n        dispatch({\n          type: 'ALERT',\n          payload: {\n            title,\n            message,\n            button,\n            ...(options && { options }),\n            visible: true,\n          },\n        }),\n      prompt: (title, message, callbackOrButtons, type, defaultValue, keyboardType, options) => {\n        setValue(defaultValue ?? '');\n        setPassword('');\n        if (typeof callbackOrButtons === 'function') {\n          switch (type) {\n            case 'plain-text':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  prompt: [\n                    { text: 'Ok', onPress: callbackOrButtons as RegularPromptCallback },\n                    { text: 'Cancel', style: 'cancel' },\n                  ],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'secure-text':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  secureTextEntry: true,\n                  prompt: [\n                    { text: 'Ok', onPress: callbackOrButtons as RegularPromptCallback },\n                    { text: 'Cancel', style: 'cancel' },\n                  ],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'login-password':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  login: [\n                    { text: 'Ok', onPress: callbackOrButtons as LoginPromptCallback },\n                    { text: 'Cancel', style: 'cancel' },\n                  ],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'default':\n              return dispatch({\n                type: 'ALERT',\n                payload: {\n                  title,\n                  message,\n                  button: [{ text: 'Ok', onPress: callbackOrButtons as DefaultPromptCallback }],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            default:\n              dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  prompt: [\n                    { text: 'Ok', onPress: callbackOrButtons as RegularPromptCallback },\n                    { text: 'Cancel', style: 'cancel' },\n                  ],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n          }\n        } else if (typeof callbackOrButtons === 'undefined') {\n          switch (type) {\n            case 'plain-text':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  prompt: [{ text: 'Ok' }, { text: 'Cancel', style: 'cancel' }],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'secure-text':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  secureTextEntry: true,\n                  prompt: [{ text: 'Ok' }, { text: 'Cancel', style: 'cancel' }],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'login-password':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  login: [{ text: 'Ok' }, { text: 'Cancel', style: 'cancel' }],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'default':\n              return dispatch({\n                type: 'ALERT',\n                payload: {\n                  title,\n                  message,\n                  button: [{ text: 'Ok' }],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            default:\n              dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  prompt: [{ text: 'Ok' }, { text: 'Cancel', style: 'cancel' }],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n          }\n        } else {\n          switch (type) {\n            case 'plain-text':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  prompt: callbackOrButtons as RegularPromptButton[],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'secure-text':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  secureTextEntry: true,\n                  prompt: callbackOrButtons as RegularPromptButton[],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'login-password':\n              return dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  login: callbackOrButtons as LoginPromptButton[],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            case 'default':\n              return dispatch({\n                type: 'ALERT',\n                payload: {\n                  title,\n                  message,\n                  button: callbackOrButtons as AlertButton[],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n\n            default:\n              dispatch({\n                type: 'PROMPT',\n                payload: {\n                  title,\n                  message,\n                  keyboardType,\n                  prompt: callbackOrButtons as RegularPromptButton[],\n                  ...(options && { options }),\n                  visible: true,\n                },\n              });\n          }\n        }\n      },\n    }),\n    []\n  );\n\n  const theme = useTheme();\n\n  const translateY = useRef(new Animated.Value(0));\n\n  const onKeyboardShown = useCallback(\n    (height: number) =>\n      Animated.timing(translateY.current, {\n        toValue: -height,\n        duration: 250,\n        easing: Easing.ease,\n        useNativeDriver: true,\n      }).start(),\n    []\n  );\n\n  const onKeyboardHidden = useCallback(\n    () =>\n      Animated.timing(translateY.current, {\n        toValue: 0,\n        duration: 250,\n        easing: Easing.ease,\n        useNativeDriver: true,\n      }).start(),\n    []\n  );\n\n  useEffect(() => {\n    if (state.visible) {\n      Keyboard.addListener(keyboardEvents.show, (e) =>\n        onKeyboardShown(e.endCoordinates.height / 2)\n      );\n      Keyboard.addListener(keyboardEvents.hide, () => onKeyboardHidden());\n    }\n    return () => {\n      onKeyboardHidden();\n      Keyboard.removeAllListeners(keyboardEvents.show);\n      Keyboard.removeAllListeners(keyboardEvents.hide);\n    };\n  }, [onKeyboardHidden, onKeyboardShown, state.visible]);\n\n  return (\n    <AlertsContext.Provider value={alerts}>\n      {children}\n      <Portal>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          style={[styles.animate, { transform: [{ translateY: translateY.current }] }]}\n        >\n          <Dialog\n            visible={state.visible}\n            dismissable={state.options.cancelable}\n            onDismiss={() => {\n              if (state.options.cancelable) {\n                state.options.onDismiss?.();\n              }\n              dismiss();\n            }}\n            style={[\n              styles.web,\n              {\n                ...(state.options.width && {\n                  width: state.options.width,\n                  alignSelf: 'center',\n                  maxWidth: state.options.width,\n                }),\n              },\n              {\n                ...(state.options.maxWidth && {\n                  maxWidth: state.options.width ?? state.options.maxWidth,\n                }),\n              },\n            ]}\n          >\n            {state.title ? <Dialog.Title>{state.title}</Dialog.Title> : null}\n            {state.message ? (\n              <Dialog.Content>\n                <Paragraph>{state.message}</Paragraph>\n              </Dialog.Content>\n            ) : null}\n            {state.prompt ? (\n              <Dialog.Content>\n                <TextInput\n                  autoFocus={state.options.autoFocus}\n                  mode={state.options.inputAppearance}\n                  label={\n                    state.options.inputLabel ?? (state.secureTextEntry ? 'Password' : undefined)\n                  }\n                  value={value}\n                  onChangeText={setValue}\n                  secureTextEntry={state.secureTextEntry}\n                  keyboardAppearance={state.options.keyboardAppearance}\n                  keyboardType={state.keyboardType}\n                />\n              </Dialog.Content>\n            ) : state.login ? (\n              <Dialog.Content>\n                <TextInput\n                  autoFocus={state.options.autoFocus}\n                  mode={state.options.inputAppearance}\n                  label={state.options.loginInputLabel ?? 'Login'}\n                  value={value}\n                  onChangeText={setValue}\n                  keyboardAppearance={state.options.keyboardAppearance}\n                  keyboardType={state.keyboardType}\n                  style={styles.login}\n                />\n                <TextInput\n                  mode={state.options.inputAppearance}\n                  label={state.options.passwordInputLabel ?? 'Password'}\n                  value={password}\n                  onChangeText={setPassword}\n                  keyboardAppearance={state.options.keyboardAppearance}\n                  keyboardType={state.keyboardType}\n                  secureTextEntry={true}\n                />\n              </Dialog.Content>\n            ) : null}\n            {state.button ? (\n              <Dialog.Actions style={state.options.stacked && styles.stacked}>\n                {state.button.map((btn) => (\n                  <Button\n                    key={btn.text}\n                    onPress={() => {\n                      btn.onPress?.();\n                      dismiss();\n                    }}\n                    color={\n                      btn.style === 'destructive'\n                        ? theme.colors.error\n                        : btn.style === 'cancel'\n                        ? theme.colors.text\n                        : theme.colors.primary\n                    }\n                    uppercase={state.options.uppercase}\n                  >\n                    {btn.text}\n                  </Button>\n                ))}\n              </Dialog.Actions>\n            ) : state.prompt ? (\n              <Dialog.Actions style={state.options.stacked && styles.stacked}>\n                {state.prompt.map((btn) => (\n                  <Button\n                    key={btn.text}\n                    onPress={() => {\n                      btn.onPress?.(value);\n                      dismiss();\n                    }}\n                    color={\n                      btn.style === 'destructive'\n                        ? theme.colors.error\n                        : btn.style === 'cancel'\n                        ? theme.colors.text\n                        : theme.colors.primary\n                    }\n                    uppercase={state.options.uppercase}\n                  >\n                    {btn.text}\n                  </Button>\n                ))}\n              </Dialog.Actions>\n            ) : state.login ? (\n              <Dialog.Actions style={state.options.stacked && styles.stacked}>\n                {state.login.map((btn) => (\n                  <Button\n                    key={btn.text}\n                    onPress={() => {\n                      btn.onPress?.({ login: value, password });\n                      dismiss();\n                    }}\n                    color={\n                      btn.style === 'destructive'\n                        ? theme.colors.error\n                        : btn.style === 'cancel'\n                        ? theme.colors.text\n                        : theme.colors.primary\n                    }\n                    uppercase={state.options.uppercase}\n                  >\n                    {btn.text}\n                  </Button>\n                ))}\n              </Dialog.Actions>\n            ) : (\n              <Dialog.Actions>\n                <Button onPress={dismiss} uppercase={state.options.uppercase}>\n                  Ok\n                </Button>\n              </Dialog.Actions>\n            )}\n          </Dialog>\n        </Animated.View>\n      </Portal>\n    </AlertsContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  stacked: {\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n  animate: {\n    flex: 1,\n    marginVertical: -300,\n  },\n  login: {\n    marginBottom: 16,\n  },\n  /** This is ugly and we should do better */\n  web:\n    Platform.OS === 'web'\n      ? {\n          maxWidth: 560,\n          alignSelf: 'center',\n        }\n      : {},\n});\n\nexport default AlertsProvider;\n"]}