{"version":3,"sources":["reducer.ts"],"names":["merge","initialState","visible","options","cancelable","reducer","state","action","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAGA,OAAO,MAAMC,YAAyB,GAAG;AACvCC,EAAAA,OAAO,EAAE,KAD8B;AAEvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL;AAF8B,CAAlC;;AAOP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAqBC,MAArB,KAA6C;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAOR,KAAK,CAACC,YAAD,EAAeM,MAAM,CAACE,OAAtB,CAAZ;;AAEF,SAAK,QAAL;AACE,aAAOT,KAAK,CAACC,YAAD,EAAeM,MAAM,CAACE,OAAtB,CAAZ;;AAEF,SAAK,SAAL;AACE,aAAOT,KAAK,CAACM,KAAD,EAAQL,YAAR,CAAZ;;AAEF;AACE,aAAOK,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["import merge from './merge';\nimport { AlertAction, AlertsState } from './type';\n\nexport const initialState: AlertsState = {\n  visible: false,\n  options: {\n    cancelable: false,\n  },\n};\n\nconst reducer = (state: AlertsState, action: AlertAction) => {\n  switch (action.type) {\n    case 'ALERT':\n      return merge(initialState, action.payload);\n\n    case 'PROMPT':\n      return merge(initialState, action.payload);\n\n    case 'DISMISS':\n      return merge(state, initialState);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]}